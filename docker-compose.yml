services:
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:15.6
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgres12
      - DBNAME=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    image: temporalio/auto-setup:1.29.0
    ports:
      - 7233:7233

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.41.0
    ports:
      - 8233:8080

  elasticsearch:
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=pass
      - ELASTIC_USERNAME=user
    image: elasticsearch:8.4.3
    ports:
      - 9200:9200
      - 9300:9300

  temporal-worker:
    container_name: askhn-worker
    build: .
    command: ["sh", "-c", "sleep 3 && ./worker"]
    depends_on:
      - temporal
      - elasticsearch
    environment:
      - TEMPORAL_HOST=temporal:7233
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OLLAMA_BASE_URL=http://host.docker.internal:11434/v1
    volumes:
      - ./.env:/app/.env

  api:
    container_name: askhn-api
    build: .
    command: ["sh", "-c", "sleep 3 && ./api"]
    depends_on:
      - temporal
      - elasticsearch
    environment:
      - TEMPORAL_HOST=temporal:7233
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/app/.env

  ui:
    container_name: askhn-ui
    build: ./ui
    depends_on:
      - api
    ports:
      - "5173:5173"
    environment:
      - BACKEND_URL=http://api:8080
